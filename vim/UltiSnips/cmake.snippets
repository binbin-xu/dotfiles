snippet project "new project structure"
cmake_minimum_required(VERSION ${1:2.8.2})
project(${2:ProjectName})

find_package(${3:library})

include_directories(${$3_INCLUDE_DIRS})

add_subdirectory(${0:src})

add_executable($2)

target_link_libraries($2 ${$3_LIBRARIES})
endsnippet


snippet		if  "if() endif()"
if(${1:#:condition})
	${0}
endif()
endsnippet


snippet		if_else  "if() else() endif()"
if(${1:#:condition})
	${2}
else()
	${3}
endif()
endsnippet


snippet		foreach		"foreach() endforeach()"
foreach(${1:item} ${2:items})
	${3}
endforeach($1)
endsnippet


snippet		macro	"macro() endmacro()"
macro(${1:name} ${2:args})
	${3}
endmacro($1)
endsnippet


snippet		function	"function() endfunction()"
function(${1:name} ${2:args})
	${3}
endfunction($1)
endsnippet


snippet		message		"message(..)"
message("${1}")
endsnippet


snippet		status_message	"message(STATUS ...)"
message(STATUS "${1}")
endsnippet


snippet		warning_message		"message(WARNING ...)"
message(WARNING "${1}")
endsnippet

snippet		author_warning_message	"message(AUTHOR_WARNING ...)"
message(AUTHOR_WARNING "${1}")
endsnippet

snippet		send_error_message	"message(SEND_ERROR ...)"
message(SEND_ERROR "${1}")
endsnippet

snippet		fatal_error_message		"message(FATAL_ERROR ...)"
message(FATAL_ERROR "${1}")
endsnippet

snippet		while	"while() endwhile()"
while(${1:#:condition})
	${2}
endwhile()
endsnippet


snippet		file_GLOBE_RECURSE	"file(GLOB_RECURSE ...)"
file(GLOB_RECURSE ${1:#:var} ${2:#:glob_paths})
endsnippet


snippet print_debug		">>>>>>>>>> ... <<<<<<<<<<<<"
message(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>")
message("${1:DEBUG}")
message("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<")
endsnippet
